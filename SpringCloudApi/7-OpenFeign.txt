Feign已经停更 OpenFeign与Feign类似 SpringCloud在Feign的基础上进一步封装 常用于客户端 主要是做服务的调用
Feign是一个声明式WebService客户端 使用Feign能让编写WebService客户端更加简单
它的使用方法是定义一个服务接口然后在上面添加注解 Feign也可支持可拔插式的编码器和解码器
SpringCloud对Feign进行了封装 使其支持了SpringMVC标准注解和HttpMessageConverters Feign可以与Eureka和Ribbon组合使用以支持负载均衡
Feign旨在使编写Java Http客户端更加容易 Feign用于消费端使用

使用Ribbon+RestTemplate 利用RestTemplate对http请求的封装处理 形成了一套模板化的调用方法
在实际的开发中 由于对服务依赖的调用可能不止一处 往往一个接口会被多处调用 所以通常都会针对每个微服务自行封装一些客户端类来包装这些依赖服务的调用
所以Feign在此基础上进一步封装 帮助我们定义和实现依赖服务接口的定义
在Feign的实现下 只需要创建一个接口并使用注解的方式来配置它（以前是Dao接口上面标注Mapper 现在是微服务接口上面标注Feign）即可完成对服务提供方接口绑定
Feign集成了Ribbon 利用Ribbon维护了Payment的服务列表信息 并且通过轮询实现了客户端的负载均衡
与Ribbon不同 通过Feign只需要定义服务绑定接口且以声明式的方法 优雅而简单的实现了服务调用

OpenFeign自带Ribbon 自带负载均衡配置项
Feign提供了日志打印功能 我们可以通过配置来调整日志级别 从而了解Feign中Http请求的细节（对Feign接口的调用情况进行监控和输出）
日志级别
    NONE 默认级别 不显示任何日志
    BASIC 仅记录请求方法 URL 响应状态码及执行时间
    HEADERS 除了BASIC中定义的信息外 还有请求和响应的头信息
    FULL 除了HEADERS中定义的信息外 还有请求和响应的正文及元数据